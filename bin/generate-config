#!/usr/bin/env ruby

require 'rubygems'
require 'mixlib/cli'
require 'mixlib/shellout'
require 'json'
require 'artifactory'

# TODO: THERE BE DRAGONS BELOW!  I SHALL SLAY THEM ALL! (pwright)
class GenerateConfig
  include Mixlib::CLI

  banner "
    If you are having to edit the json attributes file then I'm doing it wrong.
    Please submit an issue: https://github.com/opscode/qa-chef-server-cluster/issues
    "

  option :server_install_version,
    :long => '--server-install-version SERVER INSTALL VERSION',
    :description => 'latest-stable, latest-current, 12.0.1, 12.0.1+, 12.0.1+20150123091710.git.58.af97194',
    :default => 'latest-stable'

  option :server_upgrade_version,
    :long => '--server-upgrade-version SERVER UPGRADE VERSION',
    :description => 'latest-stable, latest-current, 12.0.1, 12.0.1+, 12.0.1+20150123091710.git.58.af97194',
    :default => 'latest-current'

  option :manage_install_version,
    :long => '--manage-install-version MANAGE INSTALL VERSION',
    :description => 'latest-stable, latest-current, 12.0.1, 12.0.1+, 12.0.1+20150123091710.git.58.af97194',
    :default => 'latest-stable'

  option :manage_upgrade_version,
    :long => '--manage-upgrade-version MANAGE UPGRADE VERSION',
    :description => 'latest-stable, latest-current, 12.0.1, 12.0.1+, 12.0.1+20150123091710.git.58.af97194',
    :default => 'latest-current'

  option :skip_manage,
    :long => '--skip-manage SKIP MANAGE DEPLOYMENT',
    :boolean => true

  option :enable_upgrade,
    :short => '-u',
    :long => '--enable-upgrade',
    :description => 'enables the upgrade process',
    :boolean => true

  option :disable_auto_destroy,
    :long => '--disable-auto-destroy',
    :description => 'disables auto destroy of clusters after tests',
    :boolean => true

  option :attributes_file,
    :short => '-j',
    :long => '--json-attributes JSON ATTRIBUTES',
    :description => 'output path for attributes file',
    :default => 'attributes.json'

  option :overwrite_attributes_file,
    :short => '-f',
    :description => 'overwrite existing attributes file',
    :boolean => true

  option :run_recipe,
    :short => '-r',
    :long => '--run-recipe RUN RECIPE',
    :description => 'run chef-client with run recipe'

  # Placeholder
  # option :chef_repo_path,
  #   :long => '--chef-repo-path',
  #   :description => "set the chef_repo_path. create path if it doesn't exist."

  option :platform,
    :short => '-p',
    :long => '--platform PLATFORM-VERSION',
    :description => 'Platform and version',
    :default => 'ubuntu-12.04'

  option :help,
    :short => "-h",
    :long => "--help",
    :description => "Show this message",
    :on => :tail,
    :boolean => true,
    :show_options => true,
    :exit => 0

    # TODO add node.default['qa-chef-server-cluster']['chef-provisioner-key-name'] override
    # or perhaps a default insecure key

    # TODO :bootstrap_options => { :key_name override
end


cli = GenerateConfig.new
cli.parse_options

IMAGE_MAP = {
  'ubuntu-10.04' => 'ami-eb5b19db', # ebs-io1; ebs-ssd not mounting the root fs
  'ubuntu-12.04' => 'ami-0f47053f', # ebs-hvm-ssd
  'ubuntu-14.04' => 'ami-3d50120d', # ebs-hvm-ssd

  # RedHat
  'el-5' => 'ami-87d948b7', # ebs-magnetic
  'el-6' => 'ami-aa8bfe9a', # ebs-magnetic
  'el-7' => 'ami-77d7a747', # ebs-hvm-magnetic
}

def ssh_user_for(image)
  case image
  when /^ubuntu/
    'ubuntu'

  when /^el/
    version = image.match(/el-(?<version>.+)/)[:version]
    raise "Unknown image #{image}!" if version.nil?

    version.to_i == 5 ? 'root' : 'ec2-user'

  else
    'ec2-user'
  end
end

attrs = {
  'qa-chef-server-cluster' => {
    'enable-upgrade' => truefalse,
    'auto-destroy' => truefalse,
    'chef-server-core' => {
      'install' => {
        'version' => version,
        'integration_builds' => truefalse,
      },
      'upgrade' => {
        'version' => version,
        'integration_builds' => truefalse,
      }
    },
    'opscode-manage' => {
      'skip-deploy' => truefalse,
      'install' => {
        'version' => version,
        'integration_builds' => truefalse,
      },
      'upgrade' => {
        'version' => version,
        'integration_builds' => truefalse,
      }
    },
    'aws' => {
      'machine_options' => {
        'ssh_username' => ssh_user_for(cli.config[:platform]),
        'bootstrap_options' => {
        'image_id' => IMAGE_MAP[cli.config[:platform]]
      }
    } 
  }
}

# MAPPINGS
# latest-stable version                  => latest, integration_builds => false
# latest-current                         => latest, integration_builds => true
# 12.0.1                                 => 12.0.1, integration_builds => false
# 12.0.1+                                => 12.0.1, integration_builds => true
# 12.0.1+20150123091710.git.58.af97194   => 12.0.1+20150123091710.git.58.af97194, integration_builds => true

def server_install_version
  version = 'latest'
  version REGEXP = unless cli.config[:server_install_version].start_with?('latest')
  return version
end

# def version : returns latest (to be converted to symbol), 12.0.1 or 12.0.1+20150123091710.git.58.af97194
# def integration_builds : returns true or false


raise "#{cli.config[:attributes_file]} exists. Change file path or use -f option" if File.exist?(cli.config[:attributes_file]) and not
                                                                                       cli.config[:overwrite_attributes_file]

open(cli.config[:attributes_file], 'w') do |f|
  f.puts JSON.pretty_generate(attrs)
end

puts "Attributes written to file #{cli.config[:attributes_file]}."

if cli.config[:run_recipe]
  system("chef-client -z -j #{cli.config[:attributes_file]} -o qa-chef-server-cluster::#{cli.config[:run_recipe]}")
end
